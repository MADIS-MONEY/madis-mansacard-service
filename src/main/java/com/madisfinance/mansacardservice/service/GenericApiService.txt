package com.madisfinance.mansacardservice.service;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.http.MediaType;
import org.springframework.http.client.reactive.ClientHttpRequest;
import org.springframework.stereotype.Component;
import org.springframework.web.reactive.function.BodyInserter;
import org.springframework.web.reactive.function.client.WebClient;

import reactor.core.publisher.Mono;

@Component
public abstract class GenericApiService {
    @Value("${mansa.basicauth.chain}")
    private String basicAuthChain;
    @Value("${mansa.baseurl}")
    private String baseUrl;
    protected final WebClient webClient;

    protected GenericApiService(WebClient.Builder webClientBuilder, String baseUrl) {
        this.webClient = webClientBuilder.baseUrl(baseUrl).build();
    }

    protected <T> Mono<T> post(String uri, Object requestBody, Class<T> responseType) {
        String url = baseUrl.concat(uri);
        return webClient.post()
                .uri(url)
                .contentType(MediaType.APPLICATION_JSON)
                .header("Authorization", basicAuthChain)
                .body((BodyInserter<?, ? super ClientHttpRequest>) Mono.just(requestBody))
                .retrieve()
                .bodyToMono(responseType);
    }

    // Other common methods for handling error responses, authentication, etc.
}
